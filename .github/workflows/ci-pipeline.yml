name: Continuous Integration
on:
  push:
    paths-ignore:
      - '**.md'
      - 'documentation/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'documentation/**'
  schedule:
    - cron: '0 5 * * mon'

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_oauth_client_id: ${{ secrets.TF_VAR_OAUTH_CLIENT_ID }}
  TF_VAR_oauth_client_secret: ${{ secrets.TF_VAR_OAUTH_CLIENT_SECRET }}

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build test image    
      run: docker build --target test -t todoapp:test .
    - name: Run unit and integration tests    
      run: docker run todoapp:test
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    - name: Slack Notification
      if: failure()
      uses: bryannice/gitactions-slack-notification@2.0.0
      env:
        SLACK_INCOMING_WEBHOOK: ${{ secrets.WEBHOOK_URL }}
        SLACK_MESSAGE: 'Pipeline ${{ github.run_number }} failed'
        SLACK_TITLE: 'To do app workflow'
        SLACK_CHANNEL: 'devops-pipeline'
  publish:
    runs-on: ubuntu-latest
    needs: build
    # Update below branch to main
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/exercise-12' }}
    steps:
    - uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - name: Build image
      run: docker build --target production --tag danmou367/my-todo-app:latest .
    - name: Publish image
      run: docker push danmou367/my-todo-app:latest
  terraform:
    runs-on: ubuntu-latest
    needs: publish
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/exercise-12' }}
    steps:
    - uses: actions/checkout@v4
    - name: Initialise Terraform
      run: terraform init
    - name: Apply Terraform changes
      run: terraform apply -auto-approve
    - name: Allow Azure to pull latest image
      run: curl -dH -X POST "$(terraform output -raw cd_webhook)"
